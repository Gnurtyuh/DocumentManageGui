package com.project.gui.controller;

import com.project.gui.model.DocumentDto;
import com.project.gui.service.AesServiceGui;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.stage.FileChooser;
import javafx.stage.Stage;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.security.MessageDigest;
import java.util.Arrays;

public class ReceiveDataController {

    @FXML public Button btnReceive;
    @FXML private Button btnFileBrowse;
    @FXML private Button btnDownload;
    @FXML private Button btnEye;

    @FXML private PasswordField passwordField;
    @FXML private TextField passwordVisibleField;
    @FXML private Label lblFilePath;

    private File encryptedFile;     // File m√£ h√≥a ƒë∆∞·ª£c ch·ªçn
    private boolean passwordVisible = false;
    private Long documentId;
    private String fileName;


    @FXML
    private void initialize() {
        System.out.println("‚úÖ ReceiveDataController loaded!");

        // M·∫∑c ƒë·ªãnh ·∫©n tr∆∞·ªùng hi·ªÉn th·ªã m·∫≠t kh·∫©u
        passwordVisibleField.setVisible(false);
        passwordVisibleField.setManaged(false);

        // ƒê·ªìng b·ªô d·ªØ li·ªáu gi·ªØa hai √¥
        passwordVisibleField.textProperty().bindBidirectional(passwordField.textProperty());
    }

    // === ·∫®n/hi·ªán m·∫≠t kh·∫©u ===
    @FXML
    private void handleTogglePassword() {
        passwordVisible = !passwordVisible;

        if (passwordVisible) {
            passwordVisibleField.setVisible(true);
            passwordVisibleField.setManaged(true);
            passwordField.setVisible(false);
            passwordField.setManaged(false);
            btnEye.setText("üôà");
        } else {
            passwordVisibleField.setVisible(false);
            passwordVisibleField.setManaged(false);
            passwordField.setVisible(true);
            passwordField.setManaged(true);
            btnEye.setText("üëÅ");
        }
    }
    public void setEncryptedFile(Long documentId ,String file) {
        this.documentId = documentId;
        this.fileName = file;
        if (fileName != null) {
            lblFilePath.setText("üì¶ File ƒë∆∞·ª£c nh·∫≠n: " + fileName);
            System.out.println("üì• File nh·∫≠n t·ª´ trang tr∆∞·ªõc: " + fileName);
            System.out.println("üì• File nh·∫≠n t·ª´ trang tr∆∞·ªõc: " + documentId);
        }
    }
    // === 1. Ch·ªçn t·∫≠p tin m√£ h√≥a (.enc) ===
    @FXML
    private void handleBrowseFile() {
        FileChooser fileChooser = new FileChooser();
        fileChooser.setTitle("Ch·ªçn t·∫≠p tin c·∫ßn gi·∫£i m√£");

        Stage stage = (Stage) btnFileBrowse.getScene().getWindow();
        encryptedFile = fileChooser.showOpenDialog(stage);
        fileName = encryptedFile.getName();
        lblFilePath.setText("üìÇ ƒê√£ ch·ªçn: " + encryptedFile.getName());
        System.out.println("üìÇ File ƒë∆∞·ª£c ch·ªçn: " + encryptedFile.getAbsolutePath());
    }

    // === 2. Khi b·∫•m ‚ÄúDownload‚Äù ‚Üí v·ª´a gi·∫£i m√£ v·ª´a t·∫£i v·ªÅ lu√¥n ===
    @FXML
    private void handleDownload() {

        String password = passwordField.getText();
        if (password == null || password.isEmpty()) {
            showAlert("‚ö†Ô∏è Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u ƒë·ªÉ gi·∫£i m√£!", Alert.AlertType.WARNING);
            return;
        }

        try {
            FileChooser fileChooser = new FileChooser();
            fileChooser.setTitle("Ch·ªçn n∆°i l∆∞u file gi·∫£i m√£");
            fileChooser.setInitialFileName(fileName); // g·ª£i √Ω t√™n file
            Stage stage = (Stage) btnDownload.getScene().getWindow();
            File saveFile = fileChooser.showSaveDialog(stage);
            String decryptedFilePath = AesServiceGui.decrypt(password,fileName,saveFile.getAbsolutePath());

            showAlert("‚úÖ File ƒë√£ gi·∫£i m√£ th√†nh c√¥ng!\nüìÅ File tr√™n server: " + decryptedFilePath,
                    Alert.AlertType.INFORMATION);
            System.out.println("üíæ File ƒë√£ gi·∫£i m√£ tr√™n server: " + decryptedFilePath);


            showAlert("‚úÖ ƒê√£ t·∫£i file v·ªÅ: " + saveFile.getAbsolutePath(), Alert.AlertType.INFORMATION);
            System.out.println("üìÇ File l∆∞u t·∫°i: " + saveFile.getAbsolutePath());



        } catch (Exception e) {
            showAlert("‚ùå Gi·∫£i m√£ th·∫•t b·∫°i!\nSai m·∫≠t kh·∫©u ho·∫∑c file b·ªã l·ªói.", Alert.AlertType.ERROR);
            e.printStackTrace();
        }
    }

    // === 3. Gi·∫£ l·∫≠p ‚ÄúNh·∫≠n d·ªØ li·ªáu‚Äù ===
    @FXML
    private void handleReceiveData() throws IOException {

        // 1Ô∏è‚É£ T·∫°o FXMLLoader ƒë·ªÉ t·∫£i giao di·ªán m·ªõi
        FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/project/gui/home.fxml"));
        Parent root = loader.load();

        // 2Ô∏è‚É£ L·∫•y controller c·ªßa trang ReceiveData
        PrimaryController primaryController = loader.getController();

        // 3Ô∏è‚É£ Truy·ªÅn file sang
        primaryController.handleLog(documentId);

        // 4Ô∏è‚É£ ƒê·ªïi scene
        Stage stage = (Stage) btnReceive.getScene().getWindow();

        stage.setHeight(939);
        stage.setScene(new Scene(root));
        stage.setTitle("M√†n h√¨nh nh·∫≠n d·ªØ li·ªáu");
        stage.show();
    }

    // === Hi·ªÉn th·ªã th√¥ng b√°o ===
    private void showAlert(String message, Alert.AlertType type) {
        Alert alert = new Alert(type);
        alert.setTitle("Th√¥ng b√°o");
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }
}
